// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: dynamic_registration_domain_codes.sql

package database

import (
	"context"
	"time"
)

const createDynamicRegistrationDomainCode = `-- name: CreateDynamicRegistrationDomainCode :one

INSERT INTO "dynamic_registration_domain_codes" (
    "account_id",
    "verification_host",
    "verification_code",
    "verification_prefix",
    "hmac_secret_id",
    "expires_at"
) VALUES (
    $1,
    $2,
    $3,
    $4,
    $5,
    $6
) RETURNING "id"
`

type CreateDynamicRegistrationDomainCodeParams struct {
	AccountID          int32
	VerificationHost   string
	VerificationCode   string
	VerificationPrefix string
	HmacSecretID       string
	ExpiresAt          time.Time
}

// Copyright (c) 2025 Afonso Barracha
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
func (q *Queries) CreateDynamicRegistrationDomainCode(ctx context.Context, arg CreateDynamicRegistrationDomainCodeParams) (int32, error) {
	row := q.db.QueryRow(ctx, createDynamicRegistrationDomainCode,
		arg.AccountID,
		arg.VerificationHost,
		arg.VerificationCode,
		arg.VerificationPrefix,
		arg.HmacSecretID,
		arg.ExpiresAt,
	)
	var id int32
	err := row.Scan(&id)
	return id, err
}

const deleteDynamicRegistrationDomainCode = `-- name: DeleteDynamicRegistrationDomainCode :exec
DELETE FROM "dynamic_registration_domain_codes"
WHERE "id" = $1
`

func (q *Queries) DeleteDynamicRegistrationDomainCode(ctx context.Context, id int32) error {
	_, err := q.db.Exec(ctx, deleteDynamicRegistrationDomainCode, id)
	return err
}

const updateDynamicRegistrationDomainCode = `-- name: UpdateDynamicRegistrationDomainCode :exec
UPDATE "dynamic_registration_domain_codes" SET
    "verification_host" = $2,
    "verification_code" = $3,
    "verification_prefix" = $4,
    "hmac_secret_id" = $5,
    "expires_at" = $6
WHERE "id" = $1
`

type UpdateDynamicRegistrationDomainCodeParams struct {
	ID                 int32
	VerificationHost   string
	VerificationCode   string
	VerificationPrefix string
	HmacSecretID       string
	ExpiresAt          time.Time
}

func (q *Queries) UpdateDynamicRegistrationDomainCode(ctx context.Context, arg UpdateDynamicRegistrationDomainCodeParams) error {
	_, err := q.db.Exec(ctx, updateDynamicRegistrationDomainCode,
		arg.ID,
		arg.VerificationHost,
		arg.VerificationCode,
		arg.VerificationPrefix,
		arg.HmacSecretID,
		arg.ExpiresAt,
	)
	return err
}
