// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: user_totps.sql

package database

import (
	"context"
)

const findUserTotpByUserID = `-- name: FindUserTotpByUserID :one

SELECT t.id, t.dek_kid, t.url, t.secret, t.recovery_codes, t.usage, t.account_id, t.created_at, t.updated_at FROM "totps" AS "t"
LEFT JOIN "user_totps" AS "at" ON "at"."totp_id" = "t"."id"
WHERE "at"."user_id" = $1 LIMIT 1
`

// Copyright (c) 2025 Afonso Barracha
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at https://mozilla.org/MPL/2.0/.
func (q *Queries) FindUserTotpByUserID(ctx context.Context, userID int32) (Totp, error) {
	row := q.db.QueryRow(ctx, findUserTotpByUserID, userID)
	var i Totp
	err := row.Scan(
		&i.ID,
		&i.DekKid,
		&i.Url,
		&i.Secret,
		&i.RecoveryCodes,
		&i.Usage,
		&i.AccountID,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
