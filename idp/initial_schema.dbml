Table accounts as A {
    id serial [pk]
    first_name varchar(50) [not null]
    last_name varchar(50) [not null]
    username varchar(109) [not null]
    email varchar(250) [not null]
    password text
    version integer [not null, default: 1]
    is_confirmed boolean [not null, default: false]

    two_factor_type varchar(5) [not null, default: 'none']

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (email) [unique, name: 'accounts_email_uidx']
        (username) [unique, name: 'accounts_username_uidx']
    }
}

Table accounts_totps as AT {
    id serial [pk]
    
    account_id integer [not null]
    topt_url varchar(250) [not null]
    secret_vault_id uuid [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (account_id) [unique, name: 'accounts_totps_account_id_uidx']
    }
}
Ref: AT.account_id > A.id [delete: cascade]

Table account_keys as ACK {
    id serial [pk]

    account_id integer [not null]

    scopes jsonb [not null]

    client_id varchar(22) [not null]
    client_secret text [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (client_id) [unique, name: 'account_keys_client_id_uidx']
        (account_id) [name: 'account_keys_account_id_idx']
    }
}
Ref: ACK.account_id > A.id [delete: cascade]

Table auth_providers as AP {
    id serial [pk]
    
    email varchar(250) [not null]
    provider varchar(10) [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        email [name: 'auth_providers_email_idx']
        (email, provider) [unique, name: 'auth_providers_email_provider_uidx']
    }
}
Ref: AP.email > A.email [delete: cascade, update: cascade]

Table apps as APP {
    id serial [pk]

    account_id integer [not null]

    name varchar(50) [not null]
    client_id varchar(22) [not null]
    client_secret text [not null]

    callback_uris "varchar(250)[]" [not null, default: '[]']
    logout_uris "varchar(250)[]" [not null, default: '[]']


    id_token_ttl integer [not null, default: 3600]

    jwt_crypto_suite varchar(7) [not null, default: 'ES256']

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (account_id) [name: 'apps_account_id_idx']
        (client_id) [unique, name: 'client_id_uidx']
    }
}
Ref: APP.account_id > A.id [delete: cascade]

Table app_keys as AK {
    id serial [pk]
    
    app_id integer [not null]
    account_id integer [not null]

    name varchar(10) [not null]
    jwt_crypto_suite varchar(7) [not null]

    public_key jsonb [not null]
    key_id varchar(16) [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (app_id) [name: 'app_keys_app_id_idx']
        (account_id) [name: 'app_keys_account_id_idx']

        (name, app_id) [unique, name: 'app_keys_name_app_id_uidx']
    }
}
Ref: AK.app_id > APP.id [delete: cascade]
Ref: AK.account_id > A.id [delete: cascade]

Table app_auth_providers as AAP {
    id serial [pk]
    
    app_id integer [not null]
    account_id integer [not null]

    email_password boolean [not null, default: true]
    google boolean [not null, default: false]
    facebook boolean [not null, default: false]
    github boolean [not null, default: false]
    apple boolean [not null, default: false]
    microsoft boolean [not null, default: false]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (app_id) [unique, name: 'app_auth_providers_app_id_uidx']
        (account_id) [name: 'app_auth_providers_account_id_idx']
    }
}
Ref: AAP.app_id > APP.id [delete: cascade]
Ref: AAP.account_id > A.id [delete: cascade]

Table app_user_schemas as AUS {
    id serial [pk]
    
    app_id integer [not null]
    account_id integer [not null]

    name boolean [not null, default: false]
    gender boolean [not null, default: false]
    location boolean [not null, default: false]
    birth_date boolean [not null, default: false]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (app_id) [unique, name: 'app_user_schemas_app_id_uidx']
        (account_id) [name: 'app_user_schemas_account_id_idx']
    }
}
Ref: AUS.app_id > APP.id [delete: cascade]
Ref: AUS.account_id > A.id [delete: cascade]

Table users as U {
    id serial [pk]
    
    account_id integer [not null]

    email varchar(250) [not null]
    password text
    version integer [not null, default: 1]

    user_data jsonb [not null, default: '{}']

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (account_id, email) [unique, name: 'users_account_id_email_uidx']
        (account_id) [name: 'users_account_id_idx']
    }
}
Ref: U.account_id > A.id [delete: cascade]

Table user_totps as UT {
    id serial [pk]
    
    user_id integer [not null]
    topt_url varchar(250) [not null]
    secret_vault_id uuid [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (user_id) [unique, name: 'user_totps_user_id_uidx']
    }
}
Ref: UT.user_id > U.id [delete: cascade]

Table user_auth_provider as UAP {
    id serial [pk]

    email varchar(250) [not null]
    provider varchar(10) [not null]

    account_id integer [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        email [name: 'user_auth_provider_email_idx']
        (email, provider) [unique, name: 'user_auth_provider_email_provider_uidx']
        (account_id) [name: 'user_auth_provider_account_id_idx']
    }
}
Ref: UAP.account_id > A.id [delete: cascade]
Ref: UAP.email > U.email [delete: cascade]

Table blacklisted_tokens as BT {
    id uuid [pk]

    jwt text [not null]
    expires_at timestamp [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]
}