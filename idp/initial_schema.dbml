Table accounts as A {
    id serial [pk]
    first_name varchar(50) [not null]
    last_name varchar(50) [not null]
    email varchar(250) [not null]
    password text
    version integer [not null, default: 1]
    is_confirmed boolean [not null, default: false]
    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (email) [unique, name: 'accounts_email_uidx']
    }
}

Table auth_providers as AP {
    id serial [pk]
    
    email varchar(250) [not null]
    provider varchar(10) [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        email [name: 'auth_providers_email_idx']
        (email, provider) [unique, name: 'auth_providers_email_provider_uidx']
    }
}
Ref: AP.email > A.email [delete: cascade, update: cascade]

Table auth_keys as AK {
    id uuid [pk]
    
    account_id integer [not null]

    secret text [not null]
    is_revoked boolean [not null, default: false]
    expires_at timestamp

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (account_id) [name: 'auth_keys_account_id_idx']
    }
}
Ref: AK.account_id > A.id [delete: cascade]

Table users as U {
    id serial [pk]
    
    account_id integer [not null]

    name varchar(100) [not null]
    username varchar(50) [not null]
    email varchar(250) [not null]
    password text
    version integer [not null, default: 1]
    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        (username) [unique, name: 'users_username_uidx']
        (email) [unique, name: 'users_email_uidx']
        (account_id) [name: 'users_account_id_idx']
    }
}
Ref: U.account_id > A.id [delete: cascade]

Table user_auth_provider as UAP {
    id serial [pk]

    email varchar(250) [not null]
    provider varchar(10) [not null]

    account_id integer [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]

    Indexes {
        email [name: 'user_auth_provider_email_idx']
        (email, provider) [unique, name: 'user_auth_provider_email_provider_uidx']
        (account_id) [name: 'user_auth_provider_account_id_idx']
    }
}
Ref: UAP.account_id > A.id [delete: cascade]
Ref: UAP.email > U.email [delete: cascade]

Table blacklisted_tokens as BT {
    id uuid [pk]

    expires_at timestamp [not null]

    created_at timestamp [not null, default: `now()`]
    updated_at timestamp [not null, default: `now()`]
}