services:
  redis:
    container_name: redis
    image: "valkey/valkey:latest"
    command: valkey-server
    ports:
      - "6379:6379"
    networks:
      - provider_net

  postgres:
    container_name: postgres
    image: "postgres:latest"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - provider_net

  mailhog:
    image: mailhog/mailhog
    platform: linux/amd64
    restart: always
    command: MailHog -auth-file=/etc/mailhog-auth.txt
    volumes:
      - ./mailhog-auth.txt:/etc/mailhog-auth.txt
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - provider_net

  infisical:
    container_name: infisical
    image: infisical/infisical:latest-postgres
    ports:
      - "8080:8080"
    environment:
      DB_CONNECTION_URI: "postgres://postgres:postgres@postgres:5432/infisical"
      REDIS_URL: "redis://redis:6379/0"
      ENCRYPTION_KEY: "5129b98f0b42ea03c01e41886af25ea1"
      AUTH_SECRET: "X/uTLTprw2bN6K11kIUNF0GM9M1Jw0zz1y9OofQfi04="
      SITE_URL: "http://localhost:8080"
      TELEMETRY_ENABLED: "false"
      SMTP_HOST: "mailhog"
      SMTP_PORT: 1025
      SMTP_USERNAME: "noreply@example.com"
      SMTP_PASSWORD: "password"
      SMTP_FROM_NAME: "Infisical"
      SMTP_FROM_ADDRESS: "noreply@example.com"
      NODE_ENV: "development"
    depends_on:
      - postgres
      - redis
      - mailhog
    networks:
      - provider_net
    command: sh -c "sleep 5 && npm run migration:latest && npm start"

networks:
  provider_net:
    driver: bridge
